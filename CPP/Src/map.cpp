/*
 * map.cpp
 *
 *  Created on: Jun 26, 2022
 *      Author: Lucas Martins
 */

#include "map.h"


static constexpr uint16_t rotationsMedia[TRACKS] = {

};

map::map() {
	// TODO Auto-generated constructor stub
}

map::~map() {
	// TODO Auto-generated destructor stub
}

void map::InitTracks() {
	/*uint8_t auxBaseSpeed[TRACKS] = {
		60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
		60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
		60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
		60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
		60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
		60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
		60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
		60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
		60, 60, 60, 60
	};*/



	/*uint8_t auxHighSpeed[TRACKS] = {
		60, 100, 60, 70, 60, 60, 60, 60, 60, 60,
		60, 60, 60, 100, 60, 100, 80, 60, 80, 60,
		60, 100, 80, 60, 60, 60, 100, 80, 60, 80,
		60, 60, 60, 90, 60, 60, 60, 60, 60, 60,
		70, 90, 60, 90, 60, 100, 60, 100, 100, 100,
		70, 60, 60, 70, 60, 60, 80, 60, 100, 80,
		60, 100, 80, 60, 100, 80, 60, 80, 60, 100,
		60, 80, 60, 60, 60, 60, 60, 60, 60, 60,
		60, 60, 60, 100
	};*/

	uint8_t auxHighSpeed[TRACKS] = {
		60, 80, 55, 65, 55, 65, 55, 65, 55, 60,
		60, 60, 55, 70, 60, 60, 55, 55, 55, 55,
		55, 70, 55, 55, 55, 55, 55, 60, 60, 80,
		60, 60, 60, 80, 60, 60, 60, 60, 60, 60,
		60, 70, 60, 70, 55, 80, 55, 80, 80, 80,
		70, 60, 60, 60, 60, 60, 60, 60, 80, 80,
		60, 80, 80, 60, 80, 80, 60, 80, 60, 80,
		60, 80, 60, 60, 60, 60, 60, 60, 60, 60,
		60, 60, 60, 80
	};

	uint8_t auxKp[TRACKS] = {
		13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
		13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
		13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
		13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
		13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
		13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
		13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
		13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
		13, 13, 13, 13
	};

	uint8_t auxKd[TRACKS] = {
		130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
		130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
		130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
		130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
		130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
		130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
		130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
		130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
		130, 130, 130, 130
	};

	int16_t auxWaitChangeInit[TRACKS] = {
		10, 0, 10, 10, 10, 10, 10, 10, 10, 10,
		10, 15, 0, 5, 10, 15, 10, 10, 10, 10,
		10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
		10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
		10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
		10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
		10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
		10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
		10, 10, 10, 10
	};

	uint16_t auxWaitChangeFinish[TRACKS] = {
		90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
		90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
		90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
		90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
		90, 90, 90, 90, 90, 150, 90, 90, 90, 90,
		90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
		90, 90, 90, 90, 90, 90, 90, 90, 90, 150,
		90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
		90, 90, 90, 90
	};


	/*uint16_t auxRotationsEsq[TRACKS] = {
		200, 150, 32, 51, 28, 63, 72, 73, 80, 50,
		21, 55, 30, 215, 30, 77, 75, 25, 50, 37,
		73,	79,	74,	27,	58,	18,	82,	78,	17,	63,
		20, 73,	28,	178, 140, 37, 148, 33, 152, 30,
		443, 285, 36, 298, 91, 860, 85, 102, 83, 83,
		87, 48, 115, 357, 37, 153, 103, 100, 155, 163,
		61, 164, 160, 181, 154, 164, 33, 181, 43, 1469,
		39, 113, 32, 69, 17, 77, 24, 71, 21, 73,
		28, 59, 33, 181
	};

	uint16_t auxRotationsDir[TRACKS] = {
		200, 150, 57, 81, 44, 104, 31, 61, 34, 43,
		31, 92, 63, 248, 51, 115, 76, 59, 93, 84,
		117, 80, 74, 64, 103, 38, 149, 81, 25, 108,
		35, 46, 63, 217, 42, 101, 88, 82, 104, 81,
		340, 285, 105, 333, 44, 861, 38, 96, 82, 84,
		87, 97, 82, 241, 90, 102, 100, 91, 152, 166,
		139, 198, 162, 79, 152, 166, 60, 210, 77, 1508,
		74, 138, 38, 45, 38, 60, 48, 45, 52, 46,
		56, 33, 46, 183
	};*/

	/*uint16_t auxRotationsEsq[TRACKS] = {
		84, 46, 119, 22, 21,
		30, 45, 42, 75, 214,
		154, 95, 150, 14, 100,
		13, 113, 44, 67, 197,
		57, 46, 128, 230
	};

	uint16_t auxRotationsDir[TRACKS] = {
		90, 46, 41, 12, 50,
		64, 15, 41, 27, 205,
		50, 83, 270, 26, 75,
		9, 130, 87, 69, 360,
		64, 43, 48, 230
	};*/

	/*uint8_t auxWaitChangeInit[TRACKS] = {
		1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1
	};

	uint8_t auxWaitChangeFinish[TRACKS] = {
		9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
		9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
		9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
		9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
		9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
		9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
		9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
		9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
		9, 9, 9, 9
	};*/

	/*uint16_t auxWaitChangeInit[TRACKS] = {
		10, 0, 10, 15, 10, 15, 10, 15, 10, 15,
		10, 15, 10, 15, 10, 15, 0, 10, 10, 10,
		15, 0, 0, 10, 10, 10, 15, 0, 10, 10,
		10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
		5, 5, 10, 10, 10, 8, 10, 15, 0, 0,
		0, 10, 10, 10, 10, 10, 10, 10, 15, 0,
		10, 15, 0, 10, 15, 0, 10, 10, 10, 10,
		10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
		10, 10, 10, 10

	};

	uint16_t auxWaitChangeFinish[TRACKS] = {
		200, 90, 90, 80, 90, 80, 90, 80, 90, 80,
		90, 80, 90, 85, 90, 200, 85, 90, 90, 90,
		200, 200, 85, 90, 90, 90, 200, 85, 90, 90,
		90, 90, 90, 85, 90, 90, 90, 90, 90, 90,
		95, 90, 90, 90, 90, 92, 90, 200, 200, 200,
		85, 90, 90, 90, 90, 90, 85, 90, 200, 85,
		90, 200, 85, 90, 200, 85, 90, 85, 90, 93,
		90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
		90, 90, 90, 200
	};*/



	baseSpeed = 55;
	for (char i=0; i<TRACKS; i++) {
		//baseSpeed[i] = auxBaseSpeed[i];
		kp[i] = auxKp[i];
		kd[i] = auxKd[i];
		highSpeed[i] = auxHighSpeed[i];
		//rotationsDir[i] = auxRotationsDir[i];
		//rotationsEsq[i] = auxRotationsEsq[i];
		waitChangeInit[i] = auxWaitChangeInit[i];
		waitChangeFinish[i] = auxWaitChangeFinish[i];
	}
}

float map::GetWaitChangeInit(uint8_t pos) {
	return (float)(waitChangeInit[pos]) / 100;
}

float map::GetWaitChangeFinish(uint8_t pos) {
	return (float)(waitChangeFinish[pos]) / 100;
}

uint16_t map::GetRotationsDir(uint8_t pos) {
	return rotationsDir[pos];
}

uint16_t map::GetRotationsEsq(uint8_t pos) {
	return rotationsEsq[pos];
}

uint16_t map::GetRotations(uint8_t pos) {
	return rotationsMedia[pos];
}

uint8_t map::GetBaseSpeed() {
	return baseSpeed;
}

uint8_t map::GetHighSpeed(uint8_t pos) {
	return highSpeed[pos];
}

uint8_t map::GetKp(uint8_t pos) {
	return kp[pos];
}

uint8_t map::GetKd(uint8_t pos) {
	return kd[pos];
}

void map::SetTrackRotations(uint8_t pos, uint16_t rotDir, uint16_t rotEsq) {
	rotationsDir[pos] = rotDir;
	rotationsEsq[pos] = rotEsq;
}
